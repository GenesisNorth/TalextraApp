import '../search_two_screen/widgets/search_two_item_widget.dart';import 'controller/search_two_controller.dart';import 'models/search_two_item_model.dart';import 'package:flutter/material.dart';import 'package:talextra/core/app_export.dart';import 'package:talextra/presentation/geo_discovery_page/geo_discovery_page.dart';import 'package:talextra/presentation/search_nine_page/search_nine_page.dart';import 'package:talextra/presentation/search_page/search_page.dart';import 'package:talextra/presentation/search_three_page/search_three_page.dart';import 'package:talextra/presentation/wallet_page/wallet_page.dart';import 'package:talextra/widgets/app_bar/appbar_image.dart';import 'package:talextra/widgets/app_bar/custom_app_bar.dart';import 'package:talextra/widgets/custom_bottom_bar.dart';import 'package:talextra/widgets/custom_text_form_field.dart';class SearchTwoScreen extends GetWidget<SearchTwoController> {const SearchTwoScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.black900, appBar: CustomAppBar(height: getVerticalSize(91), leadingWidth: 52, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftPink50, margin: getMargin(left: 28, top: 16, bottom: 16), onTap: () {onTapArrowleft9();}), title: CustomTextFormField(width: getHorizontalSize(341), controller: controller.textfieldController, margin: getMargin(left: 10), contentPadding: getPadding(left: 18, top: 16, right: 18, bottom: 16), textStyle: theme.textTheme.bodyMedium!, hintText: "msg_graphic_designer".tr, hintStyle: theme.textTheme.bodyMedium!, textInputAction: TextInputAction.next, filled: true, fillColor: appTheme.black900)), body: Container(width: double.maxFinite, padding: getPadding(top: 17, bottom: 17), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.deepOrangeA200.withOpacity(0.5)), Padding(padding: getPadding(left: 25, top: 35, right: 26), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [Text("lbl_recent".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium), Text("lbl_see_all".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPrimary)])), Expanded(child: Padding(padding: getPadding(left: 25, top: 20, right: 25, bottom: 5), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [Expanded(child: Expanded(child: Obx(() => ListView.separated(physics: BouncingScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(15));}, itemCount: controller.searchTwoModelObj.value.searchTwoItemList.value.length, itemBuilder: (context, index) {SearchTwoItemModel model = controller.searchTwoModelObj.value.searchTwoItemList.value[index]; return SearchTwoItemWidget(model);})))), Padding(padding: getPadding(bottom: 28), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgCloseOnprimary, height: getSize(20), width: getSize(20)), CustomImageView(svgPath: ImageConstant.imgCloseOnprimary, height: getSize(20), width: getSize(20), margin: getMargin(top: 43)), CustomImageView(svgPath: ImageConstant.imgCloseOnprimary, height: getSize(20), width: getSize(20), margin: getMargin(top: 43))]))])))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.walletPage; case BottomBarEnum.Mapicon: return AppRoutes.geoDiscoveryPage; case BottomBarEnum.Searchicon: return AppRoutes.searchPage; case BottomBarEnum.Usergroupicon: return AppRoutes.searchNinePage; case BottomBarEnum.Useraddicon: return AppRoutes.searchThreePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.walletPage: return WalletPage(); case AppRoutes.geoDiscoveryPage: return GeoDiscoveryPage(); case AppRoutes.searchPage: return SearchPage(); case AppRoutes.searchNinePage: return SearchNinePage(); case AppRoutes.searchThreePage: return SearchThreePage(); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleft9() { Get.back(); } 
 }
