import '../wallet_page/widgets/listname1_item_widget.dart';import '../wallet_page/widgets/listname_item_widget.dart';import 'controller/wallet_controller.dart';import 'models/listname1_item_model.dart';import 'models/listname_item_model.dart';import 'models/wallet_model.dart';import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:talextra/core/app_export.dart';import 'package:talextra/widgets/app_bar/appbar_image.dart';import 'package:talextra/widgets/app_bar/appbar_title.dart';import 'package:talextra/widgets/app_bar/custom_app_bar.dart';
// ignore_for_file: must_be_immutable
class WalletPage extends StatelessWidget {WalletPage({Key? key}) : super(key: key);

WalletController controller = Get.put(WalletController(WalletModel().obs));

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.black900, appBar: CustomAppBar(height: getVerticalSize(81), leadingWidth: 49, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftPink50, margin: getMargin(left: 25, top: 11, bottom: 20), onTap: () {onTapArrowleft5();}), title: AppbarTitle(text: "lbl_wallet".tr, margin: getMargin(left: 137))), body: Container(width: double.maxFinite, padding: getPadding(left: 22, top: 25, right: 22, bottom: 25), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Container(margin: getMargin(left: 3, right: 3), decoration: AppDecoration.fill4.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Container(width: getHorizontalSize(378), padding: getPadding(left: 28, top: 16, right: 28, bottom: 16), decoration: BoxDecoration(image: DecorationImage(image: fs.Svg(ImageConstant.imgGroup105), fit: BoxFit.cover)), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_current_balance".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium), Padding(padding: getPadding(top: 11), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgComputerOnprimary, height: getSize(27), width: getSize(27), margin: getMargin(top: 2)), Padding(padding: getPadding(left: 6), child: Text("lbl_1000_br_token".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.headlineSmallOnPrimary))]))]))), Padding(padding: getPadding(left: 3, top: 15, right: 3), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, children: [GestureDetector(onTap: () {onTapColumnsend();}, child: Container(padding: getPadding(left: 32, top: 24, right: 32, bottom: 24), decoration: AppDecoration.fill5.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [CustomImageView(svgPath: ImageConstant.imgSendBlack900, height: getSize(24), width: getSize(24), margin: getMargin(top: 15)), Padding(padding: getPadding(top: 3), child: Text("lbl_send".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumBold))]))), GestureDetector(onTap: () {onTapColumnsendone();}, child: Container(padding: getPadding(left: 19, top: 25, right: 19, bottom: 25), decoration: AppDecoration.fill6.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [CustomImageView(svgPath: ImageConstant.imgSendBlack90024x24, height: getSize(24), width: getSize(24), margin: getMargin(top: 14)), Padding(padding: getPadding(top: 2), child: Text("lbl_receive".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumBold))]))), Container(padding: getPadding(left: 11, top: 25, right: 11, bottom: 25), decoration: AppDecoration.fill7.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.end, children: [CustomImageView(svgPath: ImageConstant.imgCardicon, height: getSize(24), width: getSize(24), margin: getMargin(top: 14)), Padding(padding: getPadding(top: 2), child: Text("lbl_withdraw".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumBlack900Bold))]))])), Padding(padding: getPadding(top: 55), child: Text("lbl_transactions".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleLargePrimary)), Padding(padding: getPadding(left: 3, top: 9), child: Text("lbl_today".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium)), Expanded(child: Padding(padding: getPadding(left: 3, top: 13, right: 2), child: Obx(() => ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(15));}, itemCount: controller.walletModelObj.value.listnameItemList.value.length, itemBuilder: (context, index) {ListnameItemModel model = controller.walletModelObj.value.listnameItemList.value[index]; return ListnameItemWidget(model);})))), Padding(padding: getPadding(top: 21), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.deepOrangeA200.withOpacity(0.2), indent: getHorizontalSize(4), endIndent: getHorizontalSize(3))), Padding(padding: getPadding(left: 2, top: 9), child: Text("lbl_yesterday".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium)), Padding(padding: getPadding(left: 4, top: 13, right: 2), child: Obx(() => ListView.separated(physics: NeverScrollableScrollPhysics(), shrinkWrap: true, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(15));}, itemCount: controller.walletModelObj.value.listname1ItemList.value.length, itemBuilder: (context, index) {Listname1ItemModel model = controller.walletModelObj.value.listname1ItemList.value[index]; return Listname1ItemWidget(model);})))])))); } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleft5() { Get.back(); } 
/// Navigates to the sendScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the sendScreen.
onTapColumnsend() { Get.toNamed(AppRoutes.sendScreen, ); } 
/// Navigates to the receiveScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the receiveScreen.
onTapColumnsendone() { Get.toNamed(AppRoutes.receiveScreen, ); } 
 }
