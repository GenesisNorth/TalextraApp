import 'controller/receive_controller.dart';import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:talextra/core/app_export.dart';import 'package:talextra/presentation/geo_discovery_page/geo_discovery_page.dart';import 'package:talextra/presentation/search_nine_page/search_nine_page.dart';import 'package:talextra/presentation/search_page/search_page.dart';import 'package:talextra/presentation/search_three_page/search_three_page.dart';import 'package:talextra/presentation/wallet_page/wallet_page.dart';import 'package:talextra/widgets/app_bar/appbar_image.dart';import 'package:talextra/widgets/app_bar/appbar_title.dart';import 'package:talextra/widgets/app_bar/custom_app_bar.dart';import 'package:talextra/widgets/custom_bottom_bar.dart';import 'package:talextra/widgets/custom_checkbox_button.dart';import 'package:talextra/widgets/custom_elevated_button.dart';class ReceiveScreen extends GetWidget<ReceiveController> {const ReceiveScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.black900, appBar: CustomAppBar(height: getVerticalSize(83), leadingWidth: 49, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftPink50, margin: getMargin(left: 25, top: 9, bottom: 22), onTap: () {onTapArrowleft7();}), title: AppbarTitle(text: "lbl_wallet".tr, margin: getMargin(left: 137)), actions: [AppbarImage(height: getVerticalSize(39), width: getHorizontalSize(43), imagePath: ImageConstant.imgLocation39x43, margin: getMargin(left: 27, top: 8, right: 27, bottom: 8))]), body: Container(width: double.maxFinite, padding: getPadding(left: 25, top: 23, right: 25, bottom: 23), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(decoration: AppDecoration.fill4.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Container(width: getHorizontalSize(378), padding: getPadding(left: 28, top: 16, right: 28, bottom: 16), decoration: BoxDecoration(image: DecorationImage(image: fs.Svg(ImageConstant.imgGroup105), fit: BoxFit.cover)), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_current_balance".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium), Padding(padding: getPadding(top: 11), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgComputerOnprimary, height: getSize(27), width: getSize(27), margin: getMargin(top: 2)), Padding(padding: getPadding(left: 6), child: Text("lbl_1000_br_token".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.headlineSmallOnPrimary))]))]))), Padding(padding: getPadding(top: 28), child: Text("lbl_receive_token".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge)), CustomImageView(svgPath: ImageConstant.imgTicket, height: getSize(200), width: getSize(200), margin: getMargin(top: 35)), Padding(padding: getPadding(top: 80), child: Text("lbl_wallet_address".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleLarge)), Container(width: getHorizontalSize(344), margin: getMargin(left: 21, top: 19, right: 13), padding: getPadding(left: 18, top: 12, right: 18, bottom: 12), decoration: AppDecoration.outline2.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Container(width: getHorizontalSize(301), margin: getMargin(top: 2, right: 7), child: Text("msg_br1a1zp1ep5qgef".tr, maxLines: 2, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium))), Obx(() => CustomCheckboxButton(width: getHorizontalSize(142), text: "lbl_copy_address".tr, value: controller.isCheckbox.value, margin: getMargin(top: 15), padding: getPadding(top: 1, bottom: 1), textStyle: theme.textTheme.titleMedium!, isRightCheck: true, onChange: (value) {controller.isCheckbox.value = value;})), CustomElevatedButton(text: "msg_generate_new_address".tr, margin: getMargin(top: 38, bottom: 5), buttonStyle: CustomButtonStyles.fillPrimary.copyWith(fixedSize: MaterialStateProperty.all<Size>(Size(double.maxFinite, getVerticalSize(48)))), buttonTextStyle: theme.textTheme.titleMedium!)])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.walletPage; case BottomBarEnum.Mapicon: return AppRoutes.geoDiscoveryPage; case BottomBarEnum.Searchicon: return AppRoutes.searchPage; case BottomBarEnum.Usergroupicon: return AppRoutes.searchNinePage; case BottomBarEnum.Useraddicon: return AppRoutes.searchThreePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.walletPage: return WalletPage(); case AppRoutes.geoDiscoveryPage: return GeoDiscoveryPage(); case AppRoutes.searchPage: return SearchPage(); case AppRoutes.searchNinePage: return SearchNinePage(); case AppRoutes.searchThreePage: return SearchThreePage(); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleft7() { Get.back(); } 
 }
