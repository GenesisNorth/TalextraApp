import '../search_ten_screen/widgets/search_ten_item_widget.dart';import 'controller/search_ten_controller.dart';import 'models/search_ten_item_model.dart';import 'package:flutter/material.dart';import 'package:talextra/core/app_export.dart';import 'package:talextra/presentation/geo_discovery_page/geo_discovery_page.dart';import 'package:talextra/presentation/search_nine_page/search_nine_page.dart';import 'package:talextra/presentation/search_page/search_page.dart';import 'package:talextra/presentation/search_three_page/search_three_page.dart';import 'package:talextra/presentation/wallet_page/wallet_page.dart';import 'package:talextra/widgets/app_bar/appbar_image.dart';import 'package:talextra/widgets/app_bar/custom_app_bar.dart';import 'package:talextra/widgets/custom_bottom_bar.dart';import 'package:talextra/widgets/custom_search_view.dart';class SearchTenScreen extends GetWidget<SearchTenController> {const SearchTenScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.black900, appBar: CustomAppBar(height: getVerticalSize(91), leadingWidth: 47, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftPink50, margin: getMargin(left: 23, top: 11, bottom: 21), onTap: () {onTapArrowleft15();}), title: CustomSearchView(width: getHorizontalSize(341), margin: getMargin(left: 15), controller: controller.searchController, hintText: "lbl_search_messages".tr, hintStyle: theme.textTheme.bodyMedium!, textStyle: theme.textTheme.bodyMedium!, suffix: Padding(padding: EdgeInsets.only(right: getHorizontalSize(15)), child: IconButton(onPressed: () {controller.searchController.clear();}, icon: Icon(Icons.clear, color: Colors.grey.shade600))), filled: true, fillColor: appTheme.black900, contentPadding: getPadding(left: 22, top: 16, right: 22, bottom: 16), defaultBorderDecoration: SearchViewStyleHelper.fillBlack900, enabledBorderDecoration: SearchViewStyleHelper.fillBlack900, focusedBorderDecoration: SearchViewStyleHelper.fillBlack900, disabledBorderDecoration: SearchViewStyleHelper.fillBlack900)), body: SizedBox(width: double.maxFinite, child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(top: 17), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.deepOrangeA200.withOpacity(0.5))), Padding(padding: getPadding(left: 25, top: 37), child: Text("lbl_messages".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleMedium)), Spacer(), Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 25, right: 25), child: Obx(() => ListView.builder(physics: NeverScrollableScrollPhysics(), itemCount: controller.searchTenModelObj.value.searchTenItemList.value.length, itemBuilder: (context, index) {SearchTenItemModel model = controller.searchTenModelObj.value.searchTenItemList.value[index]; return SearchTenItemWidget(model);})))), Padding(padding: getPadding(left: 25), child: Row(children: [CustomImageView(imagePath: ImageConstant.imgEllipse191, height: getSize(48), width: getSize(48), radius: BorderRadius.circular(getHorizontalSize(24))), Padding(padding: getPadding(left: 3, bottom: 4), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Text("lbl_mark_twain".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumMedium), Padding(padding: getPadding(top: 8), child: Text("lbl_active_today".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.labelLargeOnPrimary_1))]))]))])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.walletPage; case BottomBarEnum.Mapicon: return AppRoutes.geoDiscoveryPage; case BottomBarEnum.Searchicon: return AppRoutes.searchPage; case BottomBarEnum.Usergroupicon: return AppRoutes.searchNinePage; case BottomBarEnum.Useraddicon: return AppRoutes.searchThreePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.walletPage: return WalletPage(); case AppRoutes.geoDiscoveryPage: return GeoDiscoveryPage(); case AppRoutes.searchPage: return SearchPage(); case AppRoutes.searchNinePage: return SearchNinePage(); case AppRoutes.searchThreePage: return SearchThreePage(); default: return DefaultWidget();} } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleft15() { Get.back(); } 
 }
