import '../search_three_page/widgets/gridunsplash5iv_item_widget.dart';import '../search_three_page/widgets/gridunsplashnta_item_widget.dart';import 'controller/search_three_controller.dart';import 'models/gridunsplash5iv_item_model.dart';import 'models/gridunsplashnta_item_model.dart';import 'models/search_three_model.dart';import 'package:flutter/material.dart';import 'package:talextra/core/app_export.dart';import 'package:talextra/widgets/app_bar/appbar_image.dart';import 'package:talextra/widgets/app_bar/custom_app_bar.dart';import 'package:talextra/widgets/custom_elevated_button.dart';
// ignore_for_file: must_be_immutable
class SearchThreePage extends StatelessWidget {SearchThreePage({Key? key}) : super(key: key);

SearchThreeController controller = Get.put(SearchThreeController(SearchThreeModel().obs));

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(backgroundColor: appTheme.black900, appBar: CustomAppBar(height: getVerticalSize(109), centerTitle: true, title: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 28, right: 21), child: Row(children: [AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleftPink50, margin: getMargin(top: 9, bottom: 7), onTap: () {onTapArrowleft10();}), AppbarImage(height: getSize(40), width: getSize(40), svgPath: ImageConstant.imgCircleaddicondefault, margin: getMargin(left: 240)), AppbarImage(height: getSize(40), width: getSize(40), svgPath: ImageConstant.imgMenuicondefault, margin: getMargin(left: 35))])), Padding(padding: getPadding(top: 26), child: SizedBox(width: double.maxFinite, child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.deepOrangeA200.withOpacity(0.5))))]), styleType: Style.bgFill_1), body: SizedBox(width: mediaQueryData.size.width, child: SingleChildScrollView(padding: getPadding(top: 32), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Align(alignment: Alignment.center, child: Padding(padding: getPadding(left: 25, right: 27), child: Row(mainAxisAlignment: MainAxisAlignment.spaceBetween, crossAxisAlignment: CrossAxisAlignment.start, children: [CustomImageView(imagePath: ImageConstant.imgEllipse, height: getSize(86), width: getSize(86), radius: BorderRadius.circular(getHorizontalSize(43))), Padding(padding: getPadding(top: 9, bottom: 27), child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 3), child: Row(children: [Text("lbl_120".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleLargeBold), Padding(padding: getPadding(left: 64), child: Text("lbl_324".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleLargeBold)), Padding(padding: getPadding(left: 62), child: Text("lbl_500".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleLargeBold))])), Padding(padding: getPadding(top: 2), child: Row(children: [Padding(padding: getPadding(bottom: 1), child: Text("lbl_posts".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyLargeLight)), Padding(padding: getPadding(left: 39, bottom: 1), child: Text("lbl_followers".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyLargeLight)), Padding(padding: getPadding(left: 23, top: 1), child: Text("lbl_following".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyLargeLight))]))]))]))), Padding(padding: getPadding(left: 25, top: 13), child: Text("msg_creative_director".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumBold)), Padding(padding: getPadding(left: 25, top: 4), child: Text("msg_product_management".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPrimary)), Padding(padding: getPadding(left: 25, top: 2), child: Text("msg_creative_thinking".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.titleMediumPrimary)), CustomElevatedButton(text: "lbl_edit_profile".tr, margin: getMargin(left: 25, top: 53, right: 25), buttonStyle: CustomButtonStyles.fillPrimary.copyWith(fixedSize: MaterialStateProperty.all<Size>(Size(double.maxFinite, getVerticalSize(42)))), buttonTextStyle: theme.textTheme.titleMedium!, onTap: () {onTapEditprofile();}, alignment: Alignment.center), Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(top: 34), child: Obx(() => GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(143), crossAxisCount: 2, mainAxisSpacing: getHorizontalSize(0), crossAxisSpacing: getHorizontalSize(0)), physics: NeverScrollableScrollPhysics(), itemCount: controller.searchThreeModelObj.value.gridunsplash5ivItemList.value.length, itemBuilder: (context, index) {Gridunsplash5ivItemModel model = controller.searchThreeModelObj.value.gridunsplash5ivItemList.value[index]; return Gridunsplash5ivItemWidget(model);})))), Obx(() => GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(143), crossAxisCount: 3, mainAxisSpacing: getHorizontalSize(1), crossAxisSpacing: getHorizontalSize(1)), physics: NeverScrollableScrollPhysics(), itemCount: controller.searchThreeModelObj.value.gridunsplashntaItemList.value.length, itemBuilder: (context, index) {GridunsplashntaItemModel model = controller.searchThreeModelObj.value.gridunsplashntaItemList.value[index]; return GridunsplashntaItemWidget(model);}))]))))); } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleft10() { Get.back(); } 
/// Navigates to the searchFourScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the searchFourScreen.
onTapEditprofile() { Get.toNamed(AppRoutes.searchFourScreen, ); } 
 }
