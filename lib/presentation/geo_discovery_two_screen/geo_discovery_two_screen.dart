import 'controller/geo_discovery_two_controller.dart';import 'package:flutter/material.dart';import 'package:flutter_svg_provider/flutter_svg_provider.dart' as fs;import 'package:talextra/core/app_export.dart';import 'package:talextra/presentation/geo_discovery_page/geo_discovery_page.dart';import 'package:talextra/presentation/search_nine_page/search_nine_page.dart';import 'package:talextra/presentation/search_page/search_page.dart';import 'package:talextra/presentation/search_three_page/search_three_page.dart';import 'package:talextra/presentation/wallet_page/wallet_page.dart';import 'package:talextra/widgets/app_bar/appbar_image.dart';import 'package:talextra/widgets/app_bar/appbar_title.dart';import 'package:talextra/widgets/app_bar/custom_app_bar.dart';import 'package:talextra/widgets/custom_bottom_bar.dart';import 'package:talextra/widgets/custom_icon_button.dart';import 'package:talextra/widgets/custom_text_form_field.dart';class GeoDiscoveryTwoScreen extends GetWidget<GeoDiscoveryTwoController> {const GeoDiscoveryTwoScreen({Key? key}) : super(key: key);

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: appTheme.black900, body: SizedBox(width: double.maxFinite, child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(decoration: AppDecoration.fill, child: Column(crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [CustomAppBar(height: getVerticalSize(25), title: AppbarTitle(text: "lbl_geo_discovery".tr, margin: getMargin(left: 63)), actions: [AppbarImage(height: getVerticalSize(18), width: getHorizontalSize(32), svgPath: ImageConstant.imgMailOnprimary, margin: getMargin(left: 25, right: 25, bottom: 7), onTap: () {onTapMail2();})]), Padding(padding: getPadding(left: 63, top: 6, bottom: 8), child: Text("msg_search_for_creatives".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.bodySmall))])), Column(mainAxisAlignment: MainAxisAlignment.start, children: [Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: appTheme.deepOrangeA200.withOpacity(0.2)), Padding(padding: getPadding(left: 29, top: 21), child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgArrowleftPink50, height: getSize(24), width: getSize(24), margin: getMargin(top: 13, bottom: 13), onTap: () {onTapImgArrowleft();}), Expanded(child: CustomTextFormField(controller: controller.professionController, margin: getMargin(left: 10), contentPadding: getPadding(left: 18, top: 16, right: 18, bottom: 16), textStyle: theme.textTheme.bodyMedium!, hintText: "msg_graphic_designer".tr, hintStyle: theme.textTheme.bodyMedium!, filled: true, fillColor: appTheme.black900))])), Card(clipBehavior: Clip.antiAlias, elevation: 0, margin: getMargin(top: 15, bottom: 5), shape: RoundedRectangleBorder(side: BorderSide(color: theme.colorScheme.primary, width: getHorizontalSize(1)), borderRadius: BorderRadiusStyle.roundedBorder10), child: Container(height: getVerticalSize(642), width: getHorizontalSize(376), decoration: AppDecoration.outline2.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Stack(alignment: Alignment.topRight, children: [CustomImageView(imagePath: ImageConstant.imgMaps, height: getVerticalSize(642), width: getHorizontalSize(375), alignment: Alignment.center), Align(alignment: Alignment.topRight, child: Padding(padding: getPadding(top: 279, right: 125), child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.start, children: [Opacity(opacity: 0.4, child: Container(height: getVerticalSize(6), width: getHorizontalSize(41), decoration: BoxDecoration(color: appTheme.gray9003f, borderRadius: BorderRadius.circular(getHorizontalSize(20))))), Opacity(opacity: 0.4, child: Container(height: getVerticalSize(6), width: getHorizontalSize(41), decoration: BoxDecoration(color: appTheme.gray9003f, borderRadius: BorderRadius.circular(getHorizontalSize(20))))), Opacity(opacity: 0.4, child: Container(height: getVerticalSize(6), width: getHorizontalSize(41), margin: getMargin(top: 23), decoration: BoxDecoration(color: appTheme.gray9003f, borderRadius: BorderRadius.circular(getHorizontalSize(20)))))]))), Opacity(opacity: 0.3, child: Align(alignment: Alignment.bottomRight, child: Container(margin: getMargin(right: 104, bottom: 267), padding: getPadding(all: 3), decoration: AppDecoration.fill8.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Container(height: getSize(11), width: getSize(11), decoration: BoxDecoration(color: theme.colorScheme.primary, borderRadius: BorderRadius.circular(getHorizontalSize(5))))))), Align(alignment: Alignment.bottomCenter, child: Card(clipBehavior: Clip.antiAlias, elevation: 0, margin: getMargin(bottom: 57), color: appTheme.black900, shape: RoundedRectangleBorder(side: BorderSide(color: theme.colorScheme.primary, width: getHorizontalSize(1)), borderRadius: BorderRadiusStyle.roundedBorder10), child: Container(height: getVerticalSize(152), width: getHorizontalSize(282), padding: getPadding(top: 1, bottom: 1), decoration: AppDecoration.outline3.copyWith(borderRadius: BorderRadiusStyle.roundedBorder10), child: Stack(alignment: Alignment.centerRight, children: [Align(alignment: Alignment.bottomLeft, child: Padding(padding: getPadding(left: 13, bottom: 34), child: Row(children: [CustomImageView(svgPath: ImageConstant.imgClock, height: getSize(13), width: getSize(13)), Padding(padding: getPadding(left: 5), child: Text("lbl_time".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.labelMedium)), Padding(padding: getPadding(left: 7), child: Text("msg_dec_23_at_08_30".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.labelMedium))]))), Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(right: 17), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.start, mainAxisAlignment: MainAxisAlignment.start, children: [Padding(padding: getPadding(left: 53), child: Text("lbl_edward_jenner".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.titleSmall)), Align(alignment: Alignment.centerRight, child: Padding(padding: getPadding(top: 4, right: 28), child: Text("msg_23_estean_new_york".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.labelLargeOnPrimary))), Padding(padding: getPadding(left: 55, top: 6), child: Text("msg_graphic_designer".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.labelMedium)), Padding(padding: getPadding(top: 50), child: Row(crossAxisAlignment: CrossAxisAlignment.start, children: [Padding(padding: getPadding(bottom: 2), child: RichText(text: TextSpan(children: [TextSpan(text: "lbl_2_5_km".tr, style: CustomTextStyles.labelMediumPrimary), TextSpan(text: " ", style: CustomTextStyles.labelMediumPurple500), TextSpan(text: "msg_from_your_location".tr, style: CustomTextStyles.labelMedium_1)]), textAlign: TextAlign.left)), Padding(padding: getPadding(left: 85, top: 5), child: Text("lbl_call".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.labelSmall))]))]))), Align(alignment: Alignment.bottomCenter, child: Padding(padding: getPadding(bottom: 61), child: SizedBox(width: getHorizontalSize(282), child: Divider(height: getVerticalSize(1), thickness: getVerticalSize(1), color: theme.colorScheme.primary)))), CustomImageView(imagePath: ImageConstant.imgRectangle1441, height: getSize(62), width: getSize(62), radius: BorderRadius.circular(getHorizontalSize(8)), alignment: Alignment.topLeft, margin: getMargin(left: 14, top: 18)), Align(alignment: Alignment.bottomRight, child: GestureDetector(onTap: () {onTapColumnrefresh();}, child: Padding(padding: getPadding(right: 53, bottom: 12), child: Column(mainAxisSize: MainAxisSize.min, crossAxisAlignment: CrossAxisAlignment.end, mainAxisAlignment: MainAxisAlignment.start, children: [CustomImageView(svgPath: ImageConstant.imgRefresh, height: getSize(20), width: getSize(20), margin: getMargin(right: 5)), Padding(padding: getPadding(top: 2), child: Text("lbl_message".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: theme.textTheme.labelSmall))])))), CustomImageView(svgPath: ImageConstant.imgCall, height: getSize(20), width: getSize(20), alignment: Alignment.bottomRight, margin: getMargin(right: 17, bottom: 24)), CustomImageView(svgPath: ImageConstant.imgLocation, height: getSize(15), width: getSize(15), alignment: Alignment.bottomLeft, margin: getMargin(left: 12, bottom: 14)), Align(alignment: Alignment.bottomRight, child: Padding(padding: getPadding(right: 94), child: SizedBox(height: getVerticalSize(62), child: VerticalDivider(width: getHorizontalSize(1), thickness: getVerticalSize(1), color: theme.colorScheme.primary))))])))), CustomImageView(svgPath: ImageConstant.imgVector19, height: getVerticalSize(269), width: getHorizontalSize(203), alignment: Alignment.topLeft, margin: getMargin(left: 73, top: 115)), Align(alignment: Alignment.topLeft, child: Container(height: getVerticalSize(269), width: getHorizontalSize(203), margin: getMargin(left: 73, top: 116), padding: getPadding(left: 21, top: 69, right: 21), decoration: BoxDecoration(image: DecorationImage(image: fs.Svg(ImageConstant.imgPin1), fit: BoxFit.cover)), child: Stack(alignment: Alignment.topRight, children: [CustomImageView(svgPath: ImageConstant.imgLocationPrimary, height: getVerticalSize(63), width: getHorizontalSize(51), alignment: Alignment.topRight), CustomImageView(imagePath: ImageConstant.imgEllipse134, height: getSize(39), width: getSize(39), radius: BorderRadius.circular(getHorizontalSize(19)), alignment: Alignment.topRight, margin: getMargin(top: 7, right: 5))]))), CustomIconButton(height: 55, width: 55, margin: getMargin(left: 29, bottom: 244), padding: getPadding(all: 7), decoration: IconButtonStyleHelper.fillPrimaryTL27, alignment: Alignment.bottomLeft, child: CustomImageView(imagePath: ImageConstant.imgGroup132)), Align(alignment: Alignment.topLeft, child: Container(height: getSize(48), width: getSize(48), margin: getMargin(left: 150, top: 92), decoration: AppDecoration.outline4, child: Stack(alignment: Alignment.center, children: [CustomImageView(svgPath: ImageConstant.imgClosePrimary, height: getSize(48), width: getSize(48), alignment: Alignment.center), CustomImageView(imagePath: ImageConstant.imgEllipse13439x39, height: getSize(39), width: getSize(39), radius: BorderRadius.circular(getHorizontalSize(19)), alignment: Alignment.center)]))), CustomImageView(svgPath: ImageConstant.imgMobile, height: getVerticalSize(78), width: getHorizontalSize(43), alignment: Alignment.bottomRight, margin: getMargin(right: 29, bottom: 225))])))])])), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}))); } 
///Handling route based on bottom click actions
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.walletPage; case BottomBarEnum.Mapicon: return AppRoutes.geoDiscoveryPage; case BottomBarEnum.Searchicon: return AppRoutes.searchPage; case BottomBarEnum.Usergroupicon: return AppRoutes.searchNinePage; case BottomBarEnum.Useraddicon: return AppRoutes.searchThreePage; default: return "/";} } 
///Handling page based on route
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.walletPage: return WalletPage(); case AppRoutes.geoDiscoveryPage: return GeoDiscoveryPage(); case AppRoutes.searchPage: return SearchPage(); case AppRoutes.searchNinePage: return SearchNinePage(); case AppRoutes.searchThreePage: return SearchThreePage(); default: return DefaultWidget();} } 
/// Navigates to the searchTenScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the searchTenScreen.
onTapMail2() { Get.toNamed(AppRoutes.searchTenScreen, ); } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapImgArrowleft() { Get.back(); } 
/// Navigates to the chatTwoScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the chatTwoScreen.
onTapColumnrefresh() { Get.toNamed(AppRoutes.chatTwoScreen, ); } 
 }
