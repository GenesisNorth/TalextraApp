import '../create_profile_screen/widgets/create_profile_item_widget.dart';import 'controller/create_profile_controller.dart';import 'models/create_profile_item_model.dart';import 'package:flutter/material.dart';import 'package:talextra/core/app_export.dart';import 'package:talextra/core/utils/validation_functions.dart';import 'package:talextra/widgets/app_bar/appbar_image.dart';import 'package:talextra/widgets/app_bar/custom_app_bar.dart';import 'package:talextra/widgets/custom_checkbox_button.dart';import 'package:talextra/widgets/custom_elevated_button.dart';import 'package:talextra/widgets/custom_text_form_field.dart';
// ignore_for_file: must_be_immutable
class CreateProfileScreen extends GetWidget<CreateProfileController> {CreateProfileScreen({Key? key}) : super(key: key);

GlobalKey<FormState> _formKey = GlobalKey<FormState>();

@override Widget build(BuildContext context) { mediaQueryData = MediaQuery.of(context); return SafeArea(child: Scaffold(resizeToAvoidBottomInset: false, backgroundColor: appTheme.black900, appBar: CustomAppBar(height: getVerticalSize(79), leadingWidth: 44, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 20, top: 16, bottom: 16), onTap: () {onTapArrowleft3();}), centerTitle: true, title: AppbarImage(height: getVerticalSize(14), width: getHorizontalSize(228), svgPath: ImageConstant.imgCreateprofile)), body: Form(key: _formKey, child: Container(width: double.maxFinite, padding: getPadding(top: 40, bottom: 40), child: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgUseraddiconPrimary, height: getSize(24), width: getSize(24)), Container(height: getSize(5), width: getSize(5), margin: getMargin(left: 27, top: 10, bottom: 9), decoration: BoxDecoration(color: appTheme.blueGray400, borderRadius: BorderRadius.circular(getHorizontalSize(2)))), CustomImageView(svgPath: ImageConstant.imgUseraddiconOnprimary, height: getSize(24), width: getSize(24), margin: getMargin(left: 18)), Container(height: getSize(5), width: getSize(5), margin: getMargin(left: 19, top: 10, bottom: 9), decoration: BoxDecoration(color: appTheme.blueGray400, borderRadius: BorderRadius.circular(getHorizontalSize(2)))), CustomImageView(svgPath: ImageConstant.imgSignal, height: getSize(24), width: getSize(24), margin: getMargin(left: 18))]), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 32, top: 57), child: Text("lbl_display_name".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyMediumOnPrimary.copyWith(letterSpacing: getHorizontalSize(0.23))))), CustomTextFormField(controller: controller.nameController, margin: getMargin(left: 32, top: 5, right: 36), contentPadding: getPadding(left: 11, top: 16, right: 11, bottom: 16), textStyle: theme.textTheme.bodyMedium!, hintText: "lbl_display_name".tr, hintStyle: theme.textTheme.bodyMedium!, textInputAction: TextInputAction.next, validator: (value) {if (!isText(value)) {return "Please enter valid text";} return null;}, filled: true, fillColor: appTheme.black900), Align(alignment: Alignment.centerLeft, child: Padding(padding: getPadding(left: 32, top: 10), child: Text("lbl_username".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: CustomTextStyles.bodyMediumOnPrimary.copyWith(letterSpacing: getHorizontalSize(0.23))))), CustomTextFormField(controller: controller.usernameController, margin: getMargin(left: 32, top: 6, right: 36), contentPadding: getPadding(left: 12, top: 16, right: 12, bottom: 16), textStyle: theme.textTheme.bodyMedium!, hintText: "lbl_username".tr, hintStyle: theme.textTheme.bodyMedium!, validator: (value) {if (!isText(value)) {return "Please enter valid text";} return null;}, filled: true, fillColor: appTheme.black900), Align(alignment: Alignment.centerRight, child: SizedBox(height: getVerticalSize(36), child: Obx(() => ListView.separated(padding: getPadding(left: 32, top: 12), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(width: getHorizontalSize(10));}, itemCount: controller.createProfileModelObj.value.createProfileItemList.value.length, itemBuilder: (context, index) {CreateProfileItemModel model = controller.createProfileModelObj.value.createProfileItemList.value[index]; return CreateProfileItemWidget(model);})))), Align(alignment: Alignment.centerLeft, child: Obx(() => CustomCheckboxButton(alignment: Alignment.centerLeft, text: "msg_i_want_to_receive".tr, value: controller.isCheckbox.value, margin: getMargin(left: 30, top: 28, right: 62), textStyle: theme.textTheme.labelLarge!, onChange: (value) {controller.isCheckbox.value = value;}))), CustomElevatedButton(text: "lbl_sign_up".tr, margin: getMargin(left: 34, top: 17, right: 33), buttonStyle: CustomButtonStyles.fillPrimary.copyWith(fixedSize: MaterialStateProperty.all<Size>(Size(double.maxFinite, getVerticalSize(48)))), buttonTextStyle: theme.textTheme.titleMedium!, onTap: () {onTapSignup();}), Container(width: getHorizontalSize(335), margin: getMargin(left: 46, top: 16, right: 46, bottom: 5), child: RichText(text: TextSpan(children: [TextSpan(text: "msg_by_signing_up_you2".tr, style: theme.textTheme.labelLarge), TextSpan(text: "msg_terms_of_service".tr, style: CustomTextStyles.labelLargePrimary_1), TextSpan(text: "lbl_and".tr, style: theme.textTheme.labelLarge), TextSpan(text: "lbl_content_policy".tr, style: CustomTextStyles.labelLargePrimary_1)]), textAlign: TextAlign.center))]))))); } 


/// Navigates to the previous screen.
///
/// When the action is triggered, this function uses the [Get] package to 
/// navigate to the previous screen in the navigation stack.
onTapArrowleft3() { Get.back(); } 
/// Navigates to the selectInterestScreen when the action is triggered.

/// When the action is triggered, this function uses the [Get] package to
/// push the named route for the selectInterestScreen.
onTapSignup() { Get.toNamed(AppRoutes.selectInterestScreen, ); } 
 }
